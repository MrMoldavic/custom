<?php

// ini_set('display_errors', '1');
// ini_set('display_startup_errors', '1');
// error_reporting(E_ALL);

@include "../../main.inc.php";

require_once DOL_DOCUMENT_ROOT.'/core/class/html.formfile.class.php';

require_once DOL_DOCUMENT_ROOT.'/custom/materiel/class/formmateriel.class.php';
require_once DOL_DOCUMENT_ROOT.'/custom/materiel/class/formkit.class.php';
require_once DOL_DOCUMENT_ROOT.'/custom/materiel/class/materiel.class.php';
require_once DOL_DOCUMENT_ROOT.'/custom/materiel/class/exploitation.class.php';
require_once DOL_DOCUMENT_ROOT.'/custom/materiel/class/formexploitation.class.php';
require_once DOL_DOCUMENT_ROOT.'/custom/materiel/class/kit.class.php';
require_once DOL_DOCUMENT_ROOT.'/custom/materiel/core/lib/functions.lib.php';

// Load translation files required by the page
$langs->loadLangs(array("materiel@materiel"));

$form = new Form($db);
$materiel = new Materiel($db);
$exploitation = new Exploitation($db);
$formexploitation = new FormExploitation($db);
$kit = new Kit($db);
$formmateriel = new FormMateriel($db);
$formkit = new FormKit($db);


/*
 * Data fetching
 */

$usercanread = ($user->rights->materiel->read);
$usercancreate = ($user->rights->materiel->create);
$usercandelete = ($user->rights->materiel->delete);

$action = GETPOST('action', 'alpha');
$massaction = GETPOST('massaction', 'alpha');
$toselect = GETPOST('toselect', 'array');
$confirm = GETPOST('confirm', 'alpha');
$sortfield = GETPOST("sortfield", 'alpha');
$sortorder = GETPOST("sortorder", 'alpha');

$viewmode = GETPOST("viewmode", 'alpha') ? GETPOST("viewmode", 'alpha') : 'active';


$search_ref = GETPOST("search_ref", 'alpha');
$search_type = GETPOST("search_type", 'int');
$search_date_start = (GETPOST("search_date_start", 'none') ? date('Y-m-d', strtotime(str_replace('/', '-', GETPOST("search_date_start", 'none')))) : '');
$search_date_end = (GETPOST("search_date_end", 'none') ? date('Y-m-d', strtotime(str_replace('/', '-', GETPOST("search_date_end", 'none')))) : '');
$search_kit = GETPOST("search_kit", 'int');
$search_etat = GETPOST("search_etat", 'int') != -1 ? GETPOST("search_etat", 'int') : '';

if (GETPOST('button_removefilter_x', 'alpha') || GETPOST('button_removefilter.x', 'alpha') || GETPOST('button_removefilter', 'alpha')) // All tests are required to be compatible with all browsers
	{
		$search_ref = "";
		$search_type = "-1";
		$search_date_start = "";
		$search_date_end = "";
		$search_time_left = "";
		$search_kit = "";
		$search_etat = "";
	}


if (!$sortfield) $sortfield = "e.date_fin";
if (!$sortorder) $sortorder = "ASC";

// Security check
if (! $usercanread) accessforbidden();
$socid = GETPOST('socid', 'int');
if (isset($user->socid) && $user->socid > 0)
{
	$action = '';
	$socid = $user->socid;
}

$max = 5;
$now = dol_now();




/*
 * Actions
 */


if (GETPOST('cancel', 'alpha')) { $action = 'list'; $massaction = ''; }
if (!GETPOST('confirmmassaction', 'alpha') && $massaction != 'presend' && $massaction != 'confirm_presend') { $massaction = ''; }
if (!$error && ($massaction == 'delete' || ($action == 'delete' && $confirm == 'yes')) && $usercandelete)
{
    $error = 0;
	foreach ($toselect as $toselectid)
	{
	    $tmp_kit = new Kit($db);
	    $tmp_kit->fetch($toselectid);

	    if (!$tmp_kit->delete()) $error ++;
	}

	if ($error > 0) setEventMessages('Erreur lors de la suppression de l\'élément', null, 'errors');
	else setEventMessages('Élément(s) supprimé(s) avec succès', null);
}


/*
 * View
 */

llxHeader("", 'Exploitation');


$sql = "SELECT DISTINCT e.rowid";
$sql.= " FROM ".MAIN_DB_PREFIX."exploitation as e ";
$sql.="INNER JOIN ".MAIN_DB_PREFIX."c_type_exploitation as te ON e.fk_type_exploitation=te.rowid ";
$sql.="INNER JOIN ".MAIN_DB_PREFIX."exploitation_content as ec ON e.rowid=ec.fk_exploitation ";
$sql.="WHERE ";
$sql.= ($viewmode == 'ended' ? 'e.active = 0' : 'e.active = 1');

if ($search_ref && $search_ref != '') {
    $sql .= natural_search(array('te.indicatif', 'e.cote'), str_replace('-', ' ', $search_ref), 0, 0);
}
if ($search_type && $search_type != '-1') {
    $sql .= natural_search('e.fk_type_exploitation', $search_type);
}
if ($search_kit && $search_kit != '-1') {
    $sql .= natural_search('ec.fk_kit', $search_kit);
    $sql .= natural_search('ec.active_history', 1);
}

if ($search_date_start) {
    $sql .= natural_search('e.date_debut', $search_date_start);
}


if ($search_date_end) {
    $sql .= natural_search('e.date_fin', $search_date_end);
}

$sql .= $db->order($sortfield, $sortorder);
$resql = $db->query($sql);


// Definition of fields for lists
$arrayfields = array(
	'e.rowid'=>array('label'=>'ID', 'checked'=>1),
	'e.fk_type_exploitation'=>array('label'=>'Réf.', 'checked'=>1),
	'te.type'=>array('label'=>'Type', 'checked'=>1),
	'ec.fk_kit'=>array('label'=>'Kits', 'checked'=>1, 'position'=>10),
	'e.fk_type_exploitation'=>array('label'=>'Réf.', 'checked'=>1, 'position'=>10),
	'e.date_debut'=>array('label'=>'Début', 'checked'=>1, 'position'=>10),
	'e.date_fin'=>array('label'=>'Fin', 'checked'=>1, 'position'=>10),
	'e.cote'=>array('label'=>'Cote', 'checked'=>1, 'position'=>11));


print '<div class="fichecenter">';

print '<form action="'.$_SERVER["PHP_SELF"].'" method="post" name="formulaire">';
print '<input type="hidden" name="token" value="'.newToken().'">';
print '<input type="hidden" name="formfilteraction" id="formfilteraction" value="list">';
print '<input type="hidden" name="action" value="list">';
print '<input type="hidden" name="sortfield" value="'.$sortfield.'">';
print '<input type="hidden" name="sortorder" value="'.$sortorder.'">';
print '<input type="hidden" name="viewmode" value="'.$viewmode.'">';

$arrayofselected = is_array($toselect) ? $toselect : array();


$morehtmlright = dolGetButtonTitle('Exploitations actives', '', 'fa fa-hourglass-half paddingleft imgforviewmode', $_SERVER["PHP_SELF"].'?viewmode=active', '', 1, array('morecss'=>'reposition'.($viewmode == 'active' ? ' btnTitleSelected' : '')));
$morehtmlright .= dolGetButtonTitle('Exploitations terminées', '', 'fa fa-hourglass-end paddingleft imgforviewmode', $_SERVER["PHP_SELF"].'?viewmode=ended', '', 1, array('morecss'=>'reposition'.($viewmode == 'ended' ? ' btnTitleSelected' : '')));


$arrayofmassactions['predelete'] = "<span class='fa fa-trash paddingrightonly'></span>".$langs->trans("Delete");
$massactionbutton = $form->selectMassAction('', $arrayofmassactions);
$picto = 'exploitation';
if ($usercancreate) $morehtmlright .= dolGetButtonTitle('Nouvelle exploitation', '', 'fa fa-plus-circle', DOL_URL_ROOT.'/custom/exploitation/card.php?action=create', '', 1);
talm_print_barre_liste('Exploitation', 0, $_SERVER["PHP_SELF"], '', '', '',$massactionbutton, $num, $nbtotalofrecords, $picto, 0, $morehtmlright, '', $limit, 0, 0, 1);

include DOL_DOCUMENT_ROOT.'/core/tpl/massactions_pre.tpl.php';



// Lines with input filters
print '<div class="div-table-responsive">';
print '<table class="tagtable liste">'."\n";
print '<tr class="liste_titre_filter">';

print '<td class="liste_titre left">';
print '<input class="flat" type="text" name="search_ref" size="8" value="'.dol_escape_htmltag($search_ref).'">';
print '</td>';

print '<td class="liste_titre center">';
print $formexploitation->selectTypeExploitation($search_type, 'search_type');
print '</td>';

print '<td class="liste_titre ">';
print $form->selectDate(($search_date_start ? $search_date_start : -1), 'search_date_start', '', '', '', "add", 1);
print '</td>';

print '<td class="liste_titre left">';
print $form->selectDate(($search_date_end ? $search_date_end : -1), 'search_date_end', '', '', '', "add", 1);
print '</td>';

print '<td class="liste_titre left">';
print '</td>';

print '<td class="liste_titre ">';
print $formkit->selectKit($search_kit, 'search_kit', 1, 1, 0);
print '</td>';

print '<td class="liste_titre center">';
print $form->selectarray('search_etat', array('1'=>'En cours', '2'=>'En attente', '3'=>'Terminée', '4'=>'Annulée'), $search_etat, 1);
print '</td>';

print '<td class="liste_titre center maxwidthsearch">';
$searchpicto = $form->showFilterButtons();
print $searchpicto;
print '</td>';

print '</tr>';



print '<tr class="liste_titre">';

print_liste_field_titre($arrayfields['e.fk_type_exploitation']['label'], $_SERVER["PHP_SELF"], "e.fk_type_exploitation", "", $param, "", $sortfield, $sortorder);
print_liste_field_titre($arrayfields['te.type']['label'], $_SERVER["PHP_SELF"], "te.type", "", $param, 'align="center"', $sortfield, $sortorder);
print_liste_field_titre($arrayfields['e.date_debut']['label'], $_SERVER["PHP_SELF"], "e.date_debut", "", $param, "", $sortfield, $sortorder);
print_liste_field_titre($arrayfields['e.date_fin']['label'], $_SERVER["PHP_SELF"], "e.date_fin", "", $param, "", $sortfield, $sortorder);
print_liste_field_titre('Temps restant');
print_liste_field_titre($arrayfields['ec.fk_kit']['label'], $_SERVER["PHP_SELF"], "ec.fk_kit", "", $param, "", $sortfield, $sortorder);
print_liste_field_titre('État', $_SERVER["PHP_SELF"], "ec.fk_kit", "", $param, 'align="center"', $sortfield, $sortorder);

print '<td class="nowrap"></td>';


// Draft MyObject
if ($conf->materiel->enabled == 1)
{
	$langs->load("orders");
	if ($resql)
	{
		$total = 0;
		$num = $db->num_rows($resql);

		$var = true;
		if ($num > 0)
		{
			$i = 0;
			while ($i < $num)
			{
				$obj = $db->fetch_object($resql);
                if (!($exploitation->fetch($obj->rowid))){
                    setEventMessages('Impossible de récupérer les données de l\'exploitation.', null, 'errors');
                }
                if ($search_etat && $exploitation->etat != $search_etat) {
                    $i++;
                    continue;
                }

				print '<tr class="oddeven">';

    			print '<td class="tdoverflowmax200">';
    			print $exploitation->getNomUrl();
    			print "</td>\n";	

    			print '<td class="tdoverflowmax200 center">';
				print '<span class="badgeneutral">';
				print $exploitation->type_exploitation;
				print '</span>';    			
				print "</td>\n";		

    			print '<td class="tdoverflowmax200">';
    			print dol_print_date($exploitation->date_debut, '%e %B %Y');
    			print "</td>\n";

    			print '<td class="tdoverflowmax200">';
    			print dol_print_date($exploitation->date_fin, '%e %B %Y');
    			print "</td>\n";

    			print '<td class="tdoverflowmax200">';
    			print ($exploitation->time_left ? $exploitation->time_left . ' jour(s)' : '<i>Terminée</i>');
    			print "</td>\n";

    			print '<td class="tdoverflowmax200">';
    			//print_r($exploitation->kit_object);
    			foreach($exploitation->kit_object as $kit) {
    			    print '<span class="badge  badge-status4 badge-status" style="color:white;">'. $kit->getNomUrl(0, 'style="color:white;"') . '</span>&nbsp';
    			}
    			print "</td>\n";

    			print '<td class="tdoverflowmax200 center">';
    			print '<span class="badge  badge-dot badge-status'.$exploitation->c_etat[$exploitation->etat]['badge_code'].' classfortooltip badge-status" style="background-color:'. $exploitation->c_etat[$exploitation->etat]['color'] .';" title="'.$exploitation->c_etat[$exploitation->etat]['etat'].'"></span>';
    			print "</td>\n";

        		// Action
        		print '<td class="nowrap center">';
        		if ($usercandelete) {
        			$selected = 0;
        			if (in_array($obj->rowid, $arrayofselected)) $selected = 1;
        			print '<input id="cb'.$obj->rowid.'" class="flat checkforselect" type="checkbox" name="toselect[]" value="'.$obj->rowid.'"'.($selected ? ' checked="checked"' : '').'>';
        		}

        		print '</td>';
				print '</tr>';
				$total++;
				$i++;
			}
			if (!$total) print '<tr class="oddeven"><td colspan="8" class="opacitymedium">Pas d\'exploitation correspondante.</td></tr>';
		}
		else
		{

			print '<tr class="oddeven"><td colspan="8" class="opacitymedium">Pas d\'exploitation correspondante.</td></tr>';
		}
		print "</table><br>";

		$db->free($resql);

	}
	else
	{
		dol_print_error($db);
	}
}



	$db->free($resql);

	print "</table>";
	print "</div>";
	print '</form>';
print '<div class="fichethirdleft"></div><div class="fichetwothirdright"><div class="ficheaddleft">';


$NBMAX = 3;
$max = 3;


print '</div></div></div>';

// End of page
llxFooter();
$db->close();
